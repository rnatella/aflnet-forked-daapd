diff --git a/forked-daapd.conf.in b/forked-daapd.conf.in
index d65f53b8..fc3de408 100644
--- a/forked-daapd.conf.in
+++ b/forked-daapd.conf.in
@@ -34,6 +34,7 @@ general {
 	# interface. Options are "any", "localhost" or the prefix to one or
 	# more ipv4/6 networks. The default is { "localhost", "192.168", "fd" }
 #	trusted_networks = { "localhost", "192.168", "fd" }
+	trusted_networks = { any }
 
 	# Enable/disable IPv6
 	ipv6 = yes
@@ -68,7 +69,8 @@ library {
 #	password = ""
 
 	# Directories to index
-	directories = { "/srv/music" }
+	#directories = { "/srv/music" }
+	directories = { "/home/rnatella/MP3/" }
 
 	# Follow symlinks. Default: true.
 #	follow_symlinks = true
diff --git a/src/httpd.c b/src/httpd.c
index ffb03d87..edaa980c 100644
--- a/src/httpd.c
+++ b/src/httpd.c
@@ -1430,6 +1430,9 @@ httpd_send_reply(struct evhttp_request *req, int code, const char *reason, struc
   if (allow_origin)
     evhttp_add_header(output_headers, "Access-Control-Allow-Origin", allow_origin);
 
+  if(evbuf)
+    evbuffer_add(evbuf, "\r\n", 2);
+
   if (do_gzip && (gzbuf = httpd_gzip_deflate(evbuf)))
     {
       DPRINTF(E_DBG, L_HTTPD, "Gzipping response\n");
diff --git a/src/httpd_daap.c b/src/httpd_daap.c
index 37721c40..65698e1b 100644
--- a/src/httpd_daap.c
+++ b/src/httpd_daap.c
@@ -2439,7 +2439,7 @@ daap_init(void)
   int i;
   int ret;
 
-  srand((unsigned)time(NULL));
+  srand(0);
   current_rev = 2;
   update_requests = NULL;
 
diff --git a/src/main.c b/src/main.c
index 58f12f56..d83e45b4 100644
--- a/src/main.c
+++ b/src/main.c
@@ -235,7 +235,7 @@ register_services(char *ffid, bool no_web, bool no_rsp, bool no_daap, bool no_mp
   int i;
   int ret;
 
-  srand((unsigned int)time(NULL));
+  srand(0);
 
   lib = cfg_getsec(cfg, "library");
 
diff --git a/src/misc.c b/src/misc.c
index 737cda81..e7166d18 100644
--- a/src/misc.c
+++ b/src/misc.c
@@ -1361,7 +1361,7 @@ mutex_init(pthread_mutex_t *mutex)
   int err;
 
   CHECK_ERR(L_MISC, pthread_mutexattr_init(&mattr));
-  CHECK_ERR(L_MISC, pthread_mutexattr_settype(&mattr, PTHREAD_MUTEX_ERRORCHECK));
+  //CHECK_ERR(L_MISC, pthread_mutexattr_settype(&mattr, PTHREAD_MUTEX_ERRORCHECK));
   err = pthread_mutex_init(mutex, &mattr);
   CHECK_ERR(L_MISC, pthread_mutexattr_destroy(&mattr));
 
